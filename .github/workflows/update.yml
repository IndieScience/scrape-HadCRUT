name: Update CAU site and data
on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
  release:
    types: [published]
  schedule:
  - cron: '37 11 * * *'  # early morning
jobs:
  build:
    changelog:
      name: CHANGELOG
      runs-on: ubuntu-latest
      if: github.event_name == 'pull_request'
      steps:
      - uses: actions/checkout@v2
      - name: Check that CHANGELOG has been updated
        run: |
          # If this step fails, this means you haven't updated the CHANGELOG.md
          # file with notes on your contribution.
          git diff --name-only $(git merge-base origin/main HEAD) | grep '^CHANGELOG.md$' && echo "Thanks for helping keep our CHANGELOG up-to-date!"

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9.5
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.5
      - uses: actions/cache@v2
        name: Configure pip caching
        id: cache-pip
        with:
          path: ${{ env.pythonLocation}}/lib/python3.9/site-packages/*
          key: ${{ runner.os }}-pip-python3.9
          restore-keys: |
            ${{ runner.os }}-pip-python3.9         
      - name: Install dependencies
#if: steps.cache-pip.outputs.cache-hit != 'true'       
        run: |
            python -m pip install --upgrade pip
            pip install flake8 pytest
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest .
      - name: Run update.sh
        run: |
          scripts/update.sh
      - name: Commit and push if repo changed
        run: |-
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          timestamp=$(date -u)
          git commit -m "Latest data: ${timestamp}" || exit 0
          git push          